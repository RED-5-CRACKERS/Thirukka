#!/usr/bin/python3
#===========================================================================================================================(Madhava)
#===========================================================================================================================(R-5-C)
import os
import sys
import time
import random
import itertools
def T():
    time.sleep(0.04)
T()
print('\u001b[32;1m')
print('===========================≠=≠======================================================================')
print()
print()
T()
print(' 88888888888 888    888 8888888 8888888b.  888     888 888    d8P  888    d8P         d8888     ')
T()
print(u'\u001b[32;1m     888     888    888   888   888   Y88b 888     888 888   d8P   888   d8P         d88888     ')
T()
print(u'\u001b[32;1m     888     888    888   888   888    888 888     888 888  d8P    888  d8P         d88P888     ')
T()
print(u'\u001b[32;1m     888     8888888888   888   888   d88P 888     888 888d88K     888d88K         d88P 888  ↑ ')
T()
print('     888     888    888   888   8888888P"  888     888 8888888b    8888888b       d88P  888     ')
T()
print(u'\u001b[32;1m     888     888    888   888   888 T88b   888     888 888  Y88b   888  Y88b     d88P   888     ')
T()
print('     888     888    888   888   888  T88b  Y88b. .d88P 888   Y88b  888   Y88b   d8888888888     ')
T()
print(u'\u001b[32;1m     888     888    888 8888888 888   T88b  "Y88888P"  888    Y88b 888    Y88b d88P     \u001b[33;1mR5C     ')
T()
print(u'\u001b[33;1m                                                                                                 ')
T()
def opt():
    print(u"""
\u001b[32;1m [\u001b[31;1m1\u001b[32;1m]. Question type wordlist generator
\u001b[32;1m [\u001b[31;1m2\u001b[32;1m]. User input possiblitys wordlist generator
\u001b[32;1m [\u001b[31;1mQ\u001b[32;1m]. Quit
\u001b[32;1m [\u001b[31;1m?\u001b[32;1m]. Help
            """)

    try:
        while True:
            option=input(u"\u001b[32;4;1mThirukka\u001b[0m> ")
            if option == "1":
                ques()
            elif option == "2":
                upass()
            elif option == "q" or option == "Q":
                exit()
            elif option == "ls":
                print(u"\u001b[0m----------------------------------------")
                try:
                    os.system("ls -1sh")
                except:
                    os.system("dir")
                print(u"\u001b[0m----------------------------------------")
            elif option == "pwd":
                print(u"\u001b[0m----------------------------------------")
                try:
                    os.system("pwd")
                except:
                    print("Sorry only in linux")
                print(u"\u001b[0m----------------------------------------")
            elif option == "clear":
                print(u"\u001b[0m----------------------------------------")
                try:
                    os.system("clear")
                except:
                    print(u"\u001b[0m----------------------------------------")
                    print("Sorry only in linux")
                    print(u"\u001b[0m----------------------------------------")
            elif option == "?":
                print(u"""\u001b[32;1m                            
\u001b[32;4;1mTool\u001b[0m \u001b[32;4;1mcommand\u001b[0m:\u001b[32;1m

    1        -       Question type wordlist generator(mini interview ) :)
    2        -       Generate all possiblityes of leter given by user
    ?        -       This banner

\u001b[32;4;1mSystem\u001b[0m \u001b[32;4;1mcommand\u001b[0m:\u001b[32;1m

    ls       -       list directory contents
    pwd      -       present working directosy
    clear    -       Clear screen

\u001b[32;4;1mExit\u001b[0m \u001b[32;4;1mcommand\u001b[0m:\u001b[32;1m
    
    q or Q   -       Quit
                      \u001b[0m""")
            elif option == "":
                pass
            else:
                print("Ooops!,  '{}' Not Found.Try '?'  ".format(option))
    except:
        pass
def ques():    
    print(u'\u001b[32;1m===========================≠=≠=============================================================')
    T()
    print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] DOB MUST BE 8 LETTERS =>\u001b[32;1m 08062000 \u001b[32;1m.Not like \u001b[31;1m 08-06-2000')
    T()
    print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] TRY TO FILL ALL ')
    T()
    print('===========================≠=≠====================================================================')
    print()
    T()
    print(u'\u001b[32;1m [\u001b[33;1m!\u001b[32;1m] I WANT TO KNOW ABOUT YOUR VICTOM. \u001b[0m')
    T()
    print()
    T()
    try:
        fname=input(u'\u001b[36;1m [\u001b[31;1mF\u001b[36;1m] FILE NAME => \u001b[0m')
        if fname == "":
            fname="wordlist.txt"
        fn=fname
        print()
        a=''
        b=''
        c=''
        d=''
        e=''
        f=''
        g=''
        h='';i='';j='';k='';l='';m='';n='';o='';p='';q='';r='';s=''
        t=''
        u=''
        v=''
        w=''
        x=''
        y=''
        z=''
        z1=''
        z2=''
        z3=''
        z4=''
        z5=''
        z6=''
        z7=''
        z8=''
        z9=''
        m1=''
        m2=''
        m3=''
        j1='';j2='';j3=''
        o1='';o2='';o3=''
        t1='';t2='';t3=''
        x1=''
        x2=''
        x3=''
        z11=''
        z22=''
        z33=''
        z61=''
        z62=''
        z63=''
        aaa=''
        bbb=''
        ccc=''
        ddd=''
        eee=''
        usc=""
        eck=""
        space=""
        name=input(u'\u001b[31;1m [*] NAME => ')
        a=input(' [*] AGE => ')
        try:
            b=tuple(input(' [*] DOB => '))
            m1=str(b[0]+b[1])
            m2=str(b[2]+b[3])
            m3=str(b[4]+b[5]+b[6]+b[7])
        except:
            pass
        c=input(' [*] PHONE => ')
        d=input(' [*] PLACE => ')
        e=input(' [*] NICK NAME => ')
        f=input(' [*] OFFICE => ')
        g=input(' [*] FEVEROT THING => ')
        h=input(' [*] LUCKEY NUMBER => ')
        print()
        print(u"\u001b[36;1m [≥] ABOUT VICTOM'S PARENTS \u001b[0m")
        print()
        i=input(u'\u001b[31;1m [*] FATHER NAME => ')
        try:
            j=tuple(input(' [*] DOB => '))
            j1=str(j[0]+j[1])
            j2=str(j[2]+j[3])
            j3=str(j[4]+j[5]+j[6]+j[7])
        except:
            pass
        k=input(" [*] FATHER'S NICK NAME => ")
        l=input(" [*] FATHER'S FEVEROT THING => ")
        m=input(" [*] FATHER'S PHONE => " )
        n=input(' [*] MOTHER NAME => ')
        try:
            o=tuple(input(' [*] DOB => '))
            o1=str(o[0]+o[1])
            o2=str(o[2]+o[3])
            o3=str(o[4]+o[5]+o[6]+o[7])
        except:
            pass
        p=input(" [*] MOTHER'S NICK NAME => ")
        q=input(" [*] MOTHER'S FEVETOR THING => ")
        r=input(" [*] MOTHER'S PHONE NUMBER => ")
        child=input(u"\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Bind About Victom's Child ? \u001b[0m")
        if child == 'y':
            print()
            print(u"\u001b[32;1m [C] VICTOM'S CHILD \u001b[31;1m")
            print()
            s=input('    [*] CHILD NAME => ')
            try:
                t=tuple(input('    [*] DOB => '))
                t1=str(t[0]+t[1])
                t2=str(t[2]+t[3])
                t3=str(t[4]+t[5]+t[6]+t[7])
            except:
                pass
            u=input('    [*] NICK NAME => ')
            v=input('    [*] FEVEROT COLOR => ')
            w=input('    [*] ANOTHER CHILD NAME => ')
            try:
                x=tuple(input('    [*] DOB => '))
                x1=str(x[0]+x[1])
                x2=str(x[2]+x[3])
                x3=str(x[4]+x[5]+x[6]+x[7])
            except:
                pass
            y=input('    [*] NICKNAME => ')
        lpart=input(u"\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Bind About Victom's Life Partener ? \u001b[0m ")
        if lpart == 'y':
            print()
            print(u"\u001b[32;1m [P] VICTOM'S LIFE PARTNER \u001b[31;1m")
            print()
            z=input('    [*] NAME => ')
            try:
                z1=tuple(input('    [*] DOB => '))
                z11=str(z1[0]+z1[1])
                z22=str(z1[2]+z1[3])
                z33=str(z1[4]+z1[5]+z1[6]+z1[7])
            except:
                pass
            z2=input('    [*] NICK NAME => ')
            z3=input('    [*] PHONE => ')
            z4=input('    [*] FEVEROT => ')
        frend=input(u"\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Bind About Victom's Friend ? \u001b[0m ")
        if frend == 'y':
            print()
            print(u"\u001b[32;1m [F] VICTOME'S FRIEND\u001b[31;1m")
            print()
            z5=input('    [*] NAME => ')
            try:
                z6=tuple(input('    [*] DOB => '))
                z61=str(z6[0]+z6[1])
                z62=str(z6[2]+z6[3])
                z63=str(z6[4]+z6[5]+z6[6]+z6[7])
            except:
                pass
            z7=input('    [*] FEVEROT => ')
            z8=input('    [*] NICK NAME => ')
            z9=input('    [*] PHONE => ')


        uc=input(u'\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Join Upper Case ? \u001b[0m')
        nm=input(u'\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Join Number ? \u001b[0m')
        sc=input(u'\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Join Special Charectors ? \u001b[0m')
        Space=input(u'\u001b[36;1m [\u001b[31;1m!\u001b[36;1m] Include Space ? \u001b[0m')
        if Space == "y":
            space=" "
        if sc == 'y':
            aaa='@'
            bbb='*'
            ccc='#'
            ddd='$'
            eee='%'
            usc='_'
            eck='!'
        #############################################################
        count=0
        lisc=0
        Lisc=0
        fname=open(fname,'a')
        for n in name,a,m1,m2,m3,c,d,e,f,g,h,i,j1,j2,j3,k,l,m,n,o1,o2,o3,p,q,r,s,t1,t2,t3,u,v,w,x1,x2,x3,y,z,z2,z3,z4,z5,z7,z8,z9,z11,z22,z33,z61,z62,z63,aaa,bbb,ccc,ddd,eee,usc,eck,space:
            for i in name,a,m1,m2,m3,c,d,e,f,g,h,i,j1,j2,j3,k,l,m,n,o1,o2,o3,p,q,r,s,t1,t2,t3,u,v,w,x1,x2,x3,y,z,z2,z3,z4,z5,z7,z8,z9,z11,z22,z33,z61,z62,z63,aaa,bbb,ccc,ddd,eee,usc,eck,space:
                for I in name,a,m1,m2,m3,c,d,e,f,g,h,i,j1,j2,j3,k,l,m,n,o1,o2,o3,p,q,r,s,t1,t2,t3,u,v,w,x1,x2,x3,y,z,z2,z3,z4,z5,z7,z8,z9,z11,z22,z33,z61,z62,z63,aaa,bbb,ccc,ddd,eee,usc,eck,space:
                    if n != "" and i != "" and I != "":
                        count+=1
                        C=str(count)
                        Z=n+i
                        Tr=n+i+I
                        Tr2=n.capitalize()+i.capitalize()
                        Tr3=n.capitalize()+i.capitalize()+I.capitalize()
                        Zr=n.capitalize()+i.capitalize()
                        Zr2=n+i.capitalize()
                        fname.write(i)
                        fname.write("\n")
                        fname.write(Z)
                        fname.write('\n')
                        fname.write(Tr)
                        fname.write("\n")
                        if uc == 'y':
                            ZZZZZ=Tr.upper()
                            ZZZZ=Tr.capitalize()
                            ZZZ=Z.capitalize()
                            ZZ=Z.upper()
                            fname.write(ZZ)
                            fname.write('\n')
                            fname.write(ZZZ)
                            fname.write('\n')
                            fname.write(ZZZZ)
                            fname.write('\n')
                            fname.write(ZZZZZ)
                            fname.write('\n')
                            fname.write(Tr2)
                            fname.write('\n')
                            fname.write(Tr3)
                            fname.write('\n')
                            fname.write(i.capitalize())
                            fname.write('\n')
                            fname.write(Zr)
                            fname.write('\n')
                            fname.write(Zr2)
                            fname.write('\n')
                        if nm == "y":
                            N=n+C
                            NN=i+C
                            NNN=n+i+C
                            NNNN=Tr+C
                            fname.write(N)
                            fname.write('\n')
                            fname.write(NN)
                            fname.write('\n')
                            fname.write(NNN)
                            fname.write('\n')
                            fname.write(NNNN)
                            fname.write('\n')
                    lis=["↑","↓","•"]
                    lis2=[".","     ","..","        ","...","      ",".....","     ","    "]
                    ran=random.choice(lis)
                    if Lisc == 6000:
                        print(u"\u001b[36;1m ",ran," \u001b[32;1mGenerating\u001b[0m {}            ".format(lis2[lisc])+"\r",end="" )
                        Lisc = 0
                        if lisc == 8:
                            lisc=0
                        else:
                            lisc+=1
                    else:
                        Lisc+=1
        fname.close()
        print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] Successfully Completed                                         ')
        T()
        print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] FILE NAME : \u001b[33;4;1m{}\u001b[0m '.format(fn))
        T()
        print(u'\u001b[0m')
    except:
        print(sys.exc_info())
def upass():
    try:
        line=0
        chars=""
        min_=""
        max_=""
        while chars == "":
            chars=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/charectors\u001b[0m)> \u001b[36;1m')
        while min_ == "":
            try:
                min_=int(input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/\u001b[31;4;1mMIN\u001b[0m\u001b[31;1mimum_length\u001b[0m)> \u001b[36;1m'))
            except:
                pass
        while max_ == "":
            try:
                max_=int(input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/\u001b[31;4;1mMAX\u001b[0m\u001b[31;1mimum_length\u001b[0m)> \u001b[36;1m'))
            except:
                pass
        if min_ > max_:
            min_=""
            max_=""
            print(u'\u001b[31;1mMINIMUM VALUE MUTS BE SMALLER THEN MAXIMUM VALUE')
            upass()
        up=input(u"\u001b[36;1mUppercase comitement ? ")
        f=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/filename:wordlist.txt\u001b[0m)> \u001b[36;1m')
        if f == '':
            f="wordlist.txt"
        ff=f
        f = open(f, 'w')
        fc=0
        for n in range(min_,max_ + 1):
            for i in itertools.product(chars, repeat=n):
                line+=1
                num=line
                a = ''.join(i)
                if up == 'y' or up == 'Y' or up == "yes" or up == "Yes":
                    c=a.upper()
                    e=a.capitalize()
                    f.write("%s\n" % e)
                    f.write("%s\n" % c)
                d=a.lower()
                f.write("%s\n" % d)
                if fc == 15000:
                    lis=["↓","•","↑"]
                    ran=random.choice(lis)
                    print(u"\u001b[36;1m ",ran,"\u001b[32;4;1mGenerating\u001b[0m   【\u001b[36;4;1m{}\u001b[0m】".format(a)+"\r",end="")
                    fc=0
                else:
                    fc+=1
                sys.stdout.flush()
        f.close()
        print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] File name : \u001b[33;4;1m{}\u001b[0m             '.format(ff))
        if up == 'y' or up == 'Y': 
            print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] NO.OF.Lines : \u001b[33;4;1m{}\u001b[0m        '.format(line*3))
        else:
            print(u'\u001b[32;1m [\u001b[31;1m*\u001b[32;1m] NO.OF.Lines : \u001b[33;4;1m{}\u001b[0m        '.format(line))
        print(u"\u001b[0m")
    except:
        print(u'\u001b[31;1m                  *******                   \u001b[0m')
        print(sys.exc_info())
        print(u"\u001b[0m")        
opt()
