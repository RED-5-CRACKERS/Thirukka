#!/usr/bin/python3
#===========================================================================================================================(Madhava)
#===========================================================================================================================(R-5-C)
import os
import sys
import time
import random
import itertools
RANLIST=[
        "Use '?' to print help banner",
        "Create html based wordlist by using '4'",
        "Use '3' to create a wordlist for php",
        "'ls' to list all files and directorys in cwd",
        "'du' to see disk usage",
        "'clear' to clear console",
        "'pwd' to print current working directory"
        ]
def T():
    time.sleep(0.04)
print(u"""\n\n\u001b[32;1m
────────────────────────────────────────────────────────────────""")
T()
print("───────────╔════╗╔╗─╔╗╔══╗╔═══╗╔╗─╔╗╔╗╔═╗╔╗╔═╗╔═══╗─────────────")
T()
print("───────────║╔╗╔╗║║║─║║╚╣─╝║╔═╗║║║─║║║║║╔╝║║║╔╝║╔═╗║─────────────")
T()
print("───────────╚╝║║╚╝║╚═╝║─║║─║╚═╝║║║─║║║╚╝╝─║╚╝╝─║║─║║─────────────")
T()
print("─────────────║║──║╔═╗║─║║─║╔╗╔╝║║─║║║╔╗║─║╔╗║─║╚═╝║─────────────")
T()
print("─────────────║║──║║─║║╔╣─╗║║║╚╗║╚═╝║║║║╚╗║║║╚╗║╔═╗║─────────────")
T()
print("─────────────╚╝──╚╝─╚╝╚══╝╚╝╚═╝╚═══╝╚╝╚═╝╚╝╚═╝╚╝─╚╝─────────────")
T()
print("────────────────────────────────────────────────────────────────\n\n\n\n\n\n\n\n\n\n\n")
T()
print("                 [ @\u001b[31;1mRed5crackers \u001b[0m(\u001b[33;1mv2.0.1\u001b[0m)\u001b[32;1m ]")
print("                 [ \u001b[34;1mAuthor\u001b[32m: Madhava\u001b[32;1m        ]")
def opt():
    print(u"""\n\n\n\n\n\n\n\n\n\n
\u001b[0m\u001b[36mTips\u001b[0m: \u001b[2m{}\u001b[0m\u001b[32;1m
----------------------------------------------------------------
\u001b[32;1m [\u001b[31;1m1\u001b[32;1m]. Intractive.      \u001b[32;1m [\u001b[31;1m2\u001b[32;1m]. Iteration. 
\u001b[32;1m [\u001b[31;1m3\u001b[32;1m]. Wordlist for php.\u001b[32;1m [\u001b[31;1m4\u001b[32;1m]. Html word based.
\u001b[32;1m [\u001b[31;1m5\u001b[32;1m]. Xml word based.  \u001b[32;1m [\u001b[31;1m6\u001b[32;1m]. Js,jsw,jsp,jsv word based.
\u001b[32;1m [\u001b[31;1m?\u001b[32;1m]. Help             \u001b[32;1m [\u001b[31;1m7\u001b[32;1m]. Customizer. \u001b[0m\u001b[36mprefix\u001b[33m\u001b[2m<Anyword>\u001b[0m\u001b[36msuffix
\u001b[32;1m [\u001b[31;1mQ\u001b[32;1m]. Quit
----------------------------------------------------------------""".format(random.choice(RANLIST)))
    try:
        while True:
            option=input(u"\u001b[32;4;1mThirukka\u001b[0m> ").strip()
            try:
                if option == "1":
                    try:
                        print(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m1/...\u001b[36;1m')
                        ques()
                    except:
                        print(sys.exc_info())
                elif option == "2":
                    try:
                        upass()
                    except:
                        print(sys.exc_info())
                elif option == "3":
                    try:
                        php()
                    except:
                        print(sys.exc_info())
                elif option == "4":
                    try:
                        html()
                    except:
                        print(sys.exc_info())
                elif option == "5":
                    try: 
                        xml()
                    except:
                        print(sys.exc_info())
                elif option == "6":
                    try:
                        js()
                    except:
                        print(sys.exc_info())
                elif option == "7":
                    try:
                        customize()
                    except:
                        print(sys.exc_info())
                elif option == "q" or option == "Q":
                    exit()
                elif option == "ls":
                    print("\u001b[32;1m----------------------------------------------------------------\u001b[0m")
                    os.system("ls -Alh --color")
                    print("\u001b[32;1m----------------------------------------------------------------\u001b[0m")
                elif option == "du":
                    print("\u001b[32;1m----------------------------------------------------------------\u001b[0m")
                    os.system("du -sh *")
                    print("\u001b[32;1m----------------------------------------------------------------\u001b[0m")
                elif option == "pwd":
                    os.system("pwd")
                elif option == "clear":
                    os.system("clear")
                elif option == "?":
                    print(u"""\u001b[32;1m-----------------------------Help-------------------------------
Def\u001b[0m: \u001b[2;1mThirukka is a wordlist generator for password attacks,
url broutforceing, hash cracking, etc...\u001b[0m\u001b[32;1m
+--------------+---------+-------------------------------------+
|    Title     | Command |          Discription                |
+--------------+---------+-------------------------------------+
|              |    1    | User Intractive mode.               |
|              |    2    | Charectors all passiblities         |
|              |    3    | Wordlist for php                    |
| Tool command |    4    | Html word based Wordlist.           |
|              |    5    | Xml word based Wordlist.            |
|              |    6    | Js,jsw,jsp,jsv word based Wordlist. |
|              |    7    | Customizer eg:prefix <word> suffix  |
|              |    ?    | This banner                         |
+--------------+---------+-------------------------------------+
|              |   ls    | List directory contents             |
|System command|   pwd   | Print current working directory     |
|              |   du    | Disk usage                          |
|              |  clear  | Clear Terminal                      |
+--------------+---------+-------------------------------------+
| Exit command |  Q or q | Quit                                |
+--------------+---------+-------------------------------------+
Note\u001b[0m: \u001b[2;1mActually it add words like Append mode.
It does not delete any word if file already exists.Just add words\u001b[0m
\u001b[32;1m---------------------------ThankYou-----------------------------\u001b[0m""")
                elif option == "":
                    pass
                else:
                    print("\u001b[32;1m[\u001b[31;1m!\u001b[32;1m] Ooops!, '\u001b[31;1m{}\u001b[32;1m' Not Found. Try '\u001b[36;1m?\u001b[32m'  ".format(option))
            except:
                print(sys.exe_info())
    except:
        pass


def ques():
    b=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""]
    dob=["","","","","","","","","","","","","","","",""]
    s=["?","!","@","#","$","_","&","-","+","*","∆","×","|","~","•","°","="]
    c=42
    count=0
    def DOB(_date_):
        while True:
            Pass=True
            dob[_date_]=input(u"\u001b[36;1mDDMMYYYY\u001b[0m: ").strip()
            if dob[_date_]=="":
                return dob[_date_]
            else:
                if len(dob[_date_])==8:
                    if dob[_date_].isdigit():
                        if int(dob[_date_][:2])>31:
                            print("\u001b[0m[\u001b[31;1m!\u001b[0m] \u001b[31;1mInvalied Date\u001b[0m: \u001b[33;1m "+dob[_date_][:2]+"\u001b[0m\u001b[2;1m/MM/YYYY\u001b[0m")
                        elif int(dob[_date_][2:4])>12:
                            print("\u001b[0m[\u001b[31;1m!\u001b[0m] \u001b[31;1mInvalied Month\u001b[0m: \u001b[0m\u001b[2;1mDD/\u001b[0m\u001b[33;1m"+dob[_date_][2:4]+"\u001b[0m\u001b[2;1m/YYYY\u001b[0m")
                        else:
                            return dob[_date_]
                    else:
                        print("\u001b[0m[\u001b[31;1m!\u001b[0m] \u001b[31;1mDob must be an Integer")
                else:
                    print("\u001b[0m[\u001b[31;1m!\u001b[0m] \u001b[31;1mDob must be 8  \u001b[33;1mEg\u001b[0m: \u001b[32;1m12082001 ")
    b[0]=input(u"\u001b[32;1mVictom's Name\u001b[0m: ")
    b[1]=input(u"\u001b[32;1mShure Name\u001b[0m: ")
    b[2]=input(u"\u001b[32;1mPet Name\u001b[0m: ")
    dob[0]=DOB(0)
    b[3]=input(u"\u001b[32;1mEnemy Name\u001b[0m: ")
    b[4]=input(u"\u001b[32;1mFeverot star\u001b[0m: ")
    b[5]=input(u"\u001b[32;1mFeverot Game\u001b[0m: ")
    b[6]=input(u"\u001b[32;1mMemerable Thing or Place\u001b[0m: ")
    b[7]=input(u"\u001b[32;1mPhone\u001b[0m: ")
    b[8]=input(u"\u001b[32;1mCity\u001b[0m: ")
    print(u"\u001b[32;1m ---  Home Info  --- \u001b[0m")
    b[9]=input(u"\u001b[32;1mFather Name\u001b[0m: ")
    dob[1]=DOB(1)
    b[10]=input(u"\u001b[32;1mFather's Feverot thing\u001b[0m: ")
    b[11]=input(u"\u001b[32;1mMother Name\u001b[0m: ")
    dob[2]=DOB(2)
    b[12]=input(u"\u001b[32;1mMother's Feverot thing\u001b[0m: ")
    b[13]=input(u"\u001b[32;1mBrother's Name\u001b[0m: ")
    dob[3]=DOB(3)
    b[14]=input(u"\u001b[32;1mSister's Name\u001b[0m: ")
    dob[4]=DOB(4)
    friend=input(u"\u001b[33;1mDo you want to bind about his/her Friend ? \u001b[0m").strip()
    if friend == "y" or friend == "yes":
        b[15]=input(u"\u001b[32;1mFriend's Name\u001b[0m: ")
        b[16]=input(u"\u001b[32;1mLast Name\u001b[0m: ")
        dob[5]=DOB(5)
        b[17]=input(u"\u001b[32;1mPet Name\u001b[0m: ")
        b[18]=input(u"\u001b[32;1mCity\u001b[0m: ")
        b[19]=input(u"\u001b[32;1mFeverot\u001b[0m: ")
        b[20]=input(u"\u001b[32;1mPhone\u001b[0m: ")
    danger=input(u"\u001b[33;1mDo you want to bind his/her Life Partner ?\u001b[0m ").strip()
    if danger == "y" or danger == "yes":
        b[21]=input(u"\u001b[32;1mName\u001b[0m: ")
        b[22]=input(u"\u001b[32;1mLast Name\u001b[0m: ")
        b[23]=input(u"\u001b[32;1mPet Name\u001b[0m: ")
        dob[6]=DOB(6)
        b[24]=input(u"\u001b[32;1mFeverot\u001b[0m: ")
    baby=input(u"\u001b[33;1mDo you want to bind about his/her Children ? \u001b[0m").strip()
    if baby == "y" or baby == "yes":
        b[25]=input(u"\u001b[32;1mName\u001b[0m: ")
        b[26]=input(u"\u001b[32;1mLast Name\u001b[0m: ")
        b[27]=input(u"\u001b[32;1mPet Name\u001b[0m: ")
        dob[7]=DOB(7)
        b[27]=input(u"\u001b[32;1mFeverot\u001b[0m: ")
    b[28]=input(u"\u001b[35;1mVectom's Most used word or name or ... \u001b[0m: ").strip()
    Freetype=input(u"\u001b[33;1mDo you want to add some more info ? \u001b[0m").strip()
    if Freetype == "y" or Freetype == "yes":
        I=1
        print(u"\u001b[32;1m   ---  Additional Info  --- \u001b[0m")
        print(u"\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] After added, '\u001b[33;1m:q\u001b[32;1m' to come back")
        while True:
            a=input(u"\u001b[31;1m"+str(I)+".Additional info\u001b[0m: ").strip()
            if a != ":q":
                b.append(a)
                I+=1
            else:
                print("\u001b[32;1m <<Step back>>\u001b[0m")
                break
        for i in range(25):
            b.append("")
    upper=input(u"\u001b[33;1mDo you want to add UPPER case ? \u001b[0m").strip()
    sc=input(u"\u001b[33;1mDo you want to add Specel cherectors ? \u001b[0m").strip()
    num=input(u"\u001b[33;1mEnd with numbers ? \u001b[0m").strip()
    print(u"\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Eg: MadhavaMadhavaMadhava")
    three=input(u"\u001b[33;1mDo you want to bind trice of the info ? \u001b[0m").strip()
    print(u"\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Default 'wordlist.txt'")
    fname=input(u"File Name\u001b[0m: ").strip()
    if fname == "":
        fname="wordlist.txt"
    #Procesd=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/Enter_to_Generet\u001b[0m)> \u001b[36;1m')
    #CONFIG
    b[-1]=dob[0][:2]
    b[-2]=dob[0][2:4]
    b[-3]=dob[0][4:8]
    b[-4]=dob[1][:2]
    b[-5]=dob[1][2:4]
    b[-6]=dob[1][4:8]
    b[-7]=dob[2][:2]
    b[-8]=dob[2][2:4]
    b[-9]=dob[2][4:8]
    b[-10]=dob[3][:2]
    b[-11]=dob[3][2:4]
    b[-12]=dob[3][4:8]
    b[-13]=dob[4][:2]
    b[-14]=dob[4][2:4]
    b[-15]=dob[4][4:8]
    b[-16]=dob[5][:2]
    b[-17]=dob[5][2:4]
    b[-18]=dob[5][4:8]
    b[-19]=dob[6][:2]
    b[-20]=dob[6][2:4]
    b[-21]=dob[6][4:8]
    b[-22]=dob[7][:2]
    b[-23]=dob[7][2:4]
    b[-24]=dob[7][4:8]
    zc1=0
    for i in b:
        i=i.strip()
        f=open(fname,"a")
        if i != "":
            f.write(i+"\n")
            zc1+=1
            for n in b:
                n=n.strip()
                if n != "":
                    f.write(n+i+"\n")
                    zc1+=1
                    for m in b:
                        m=m.strip()
                        if three == "y" or three == "yes" or three == "Y":
                            if m != "":
                                f.write(i+n+m+"\n")
                                zc1+=1
                                if upper == "y" or upper == "yes" or upper == "Y":
                                    f.write(i+n+m.upper()+"\n")
                                    f.write(i+n.upper()+m+"\n")
                                    f.write(i.upper()+n+m+"\n")
                                    f.write(i.capitalize()+n+m+"\n")
                                    f.write(i+n.capitalize()+m+"\n")
                                    f.write(i+n+m.capitalize()+"\n")
                                    f.write(i.upper()+n.capitalize()+m+"\n")
                                    f.write(i.capitalize()+n.upper()+m+"\n")
                                    f.write(i+n.capitalize()+m.upper()+"\n")
                                    f.write(i+n.upper()+m.capitalize()+"\n")
                                    f.write(i.upper()+n.upper()+m.capitalize()+"\n")
                                    f.write(i.capitalize()+n.upper()+m.upper()+"\n")
                                    zc1+=12
                    if upper == "y" or upper == "yes" or upper == "Y":
                        f.write(n+i.upper()+"\n")
                        f.write(n.upper()+i+"\n")
                        f.write(n+i.capitalize()+"\n")
                        f.write(n.capitalize()+i+"\n")
                        f.write(n.upper()+i.capitalize()+"\n")
                        f.write(n.upper()+i.upper()+"\n")
                        f.write(n.capitalize()+i.capitalize()+"\n")
                        f.write(n.capitalize()+i.upper()+"\n")
                        zc1+=8
                    if num == "y" or num == "yes":
                        for Num in range(0,200):
                            f.write(n+i+str(Num)+"\n")
                            zc1+=1
            if upper == "y" or upper == "yes" or upper == "Y":
                f.write(i.upper()+"\n")
                f.write(i.capitalize()+"\n")
                zc1+=2
            if num == "y" or num == "yes":
                for cou in range(0,200):
                    f.write(i+str(cou)+"\n")
                    zc1+=1
            if sc == "y" or sc =="yes":
                for Sc in s:
                    for Y in b:
                        if Sc != "" and Y != "":
                            f.write(Y+Sc+"\n")
                            f.write(Sc+Y+"\n")
                            if upper == "y" or upper == "yes":
                                f.write(Sc+Y.capitalize()+"\n")
                                f.write(Y.capitalize()+Sc+"\n")
                                zc1+=2
                            zc1+=2
                sc=""
            count+=1
    f.close()
    lis=[fname,str(zc1)]
    print(u"\u001b[32;1m+------------------------------+-------------------------------+")
    print(u"| Name of the wordlist         | Total Number of Lines Added   |")
    print(u"+------------------------------+-------------------------------+")
    print(u"| \u001b[37;1m",lis[0]," "*(26-len(lis[0])),"\u001b[32;1m| \u001b[37;1m",lis[1]," "*(27-len(lis[1])),"\u001b[32;1m|")
    print(u"+------------------------------+-------------------------------+\u001b[0m")


def upass():
    try:
        zzz=["Generating...","gEnerating...","geNerating...","genErating...","geneRating...","generAting...","generaTing...","generatIng...","generatiNg...","generatinG...","generating_..","generating._.","generating.._"]
        zz=itertools.cycle(zzz)
        line=0
        chars=""
        min_=""
        max_=""
        while chars == "" or len(chars)!=len(set(chars)):
            chars=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/charectors\u001b[0m)> \u001b[0m').strip()
            if len(chars)!=len(set(chars)):
                print("\u001b[32;1m[\u001b[31;1m!\u001b[32;1m] Similar charector present in \u001b[0m'{}'.\u001b[0m".format(chars))
        def Min(min_=""):    
            while min_ == "":
                try:
                    min_=int(input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/\u001b[31;4;1mMIN\u001b[0m\u001b[31;1mimum_length\u001b[0m)> \u001b[0m').strip())
                    return min_
                except:
                    pass
        def Max(max_=""):
            while max_ == "":
                try:
                    max_=int(input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/\u001b[31;4;1mMAX\u001b[0m\u001b[31;1mimum_length\u001b[0m)> \u001b[0m').strip())
                    return max_
                except:
                    pass
        while True:
            min_=Min()
            max_=Max()
            if min_ > max_:
                print(u'\u001b[32;1m[\u001b[31;1m!\u001b[32;1m] MINIMUM VALUE MUTS BE SMALLER THEN MAXIMUM VALUE')
            else:
                break
        up=input(u"\u001b[33;1mUppercase comitement ? ").strip()
        f=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m2/filename:wordlist.txt\u001b[0m)> \u001b[36;1m').strip()
        if f == '':
            f="wordlist.txt"
        ff=f
        f = open(f, 'a')
        fc=0
        for n in range(min_,max_ + 1):
            for i in itertools.product(chars, repeat=n):
                line+=1
                num=line
                a = ''.join(i)
                if up == 'y' or up == 'Y' or up == "yes" or up == "Yes":
                    c=a.upper()
                    e=a.capitalize()
                    f.write("%s\n" % e)
                    f.write("%s\n" % c)
                d=a
                f.write("%s\n" % d)
                if fc == 30000:
                    lis=["↓","↑","↑","↑","↓","↑"]
                    ran=random.choice(lis)
                    print(u"\u001b[36;1m ",ran,"\u001b[32;1m",next(zz),"\u001b[0m【\u001b[36;1m",len(a),"\u001b[0m】【\u001b[36;4;1m{}\u001b[0m】".format(a)+"\r",end="")
                    fc=0
                else:
                    fc+=1
                sys.stdout.flush()
        f.close()
        if up == "y" or up == "Y" or up == "yes":
            line*=3
        lis=[ff,str(line)]
        print(u'\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Successfully Completed                          ')
        print(u"\u001b[32;1m+-----------------------+-----------------------------+")
        print(u"| Name of the wordlist  | Total Number of Lines Added |")
        print(u"+-----------------------+-----------------------------+")
        print(u"| \u001b[37;1m",lis[0]," "*(19-len(lis[0])),"\u001b[32;1m|   \u001b[37;1m",
                lis[1]," "*(23-len(lis[1])),"\u001b[32;1m|")
        print(u"+-----------------------+-----------------------------+\u001b[0m")
    except:
        print(sys.exc_info())
def php():
    word='_php\n_php-nusoap\n_phpmyadmin\namfphp\narticlephp\ncgi-php\ncontact25php\nctpaygatephp\nmaphp\nmyphp\nmyphpadmin\nmyphpnuke\nphp\nphp-bin\nphp-inc\nphp-includes\nphp-lib\nphp-ofc-library\nphp-sdk\nphp-stats\nphp-uploads\nphp168\nphp2\nphp3\nphp4\nphp5\nphpBB\nphpBB2\nphpEventCalendar\nphpMyAdmin\nphpSQLiteAdmin\nphp_files\nphp_inc\nphp_include\nphp_includes\nphp_lib\nphp_paypal\nphp_scripts\nphp_speedy\nphp_test\nphp_uploads\nphpad\nphpadm\nphpadmin\nphpads\nphpadsnew\nphpbay\nphpbb\nphpbb2\nphpbb3\nphpbb_seo\nphpcache\nphpcalendar\nphpcaptcha\nphpcart\nphpcms\nphpcode\nphpcollab\nphpcounter\nphpdig\nphpdoc\nphpedit\nphpesp\nphpexcelreader\nphpfiles\nphpform\nphpformgen\nphpforms\nphpgroupware\nphpicalendar\nphpids\nphpinc\nphpinclude\nphpincludes\nphpinfo\nphpjobscheduler\nphpld\nphpldapadmin\nphplib\nphplist\nphplive\nphplivehelper\nphplot\nphpma\nphpmail\nphpmailer\nphpmanual\nphpmv\nphpmv2\nphpmy\nphpmyadmin\nphpmyadmin2\nphpmyadmin3\nphpmybackuppro\nphpmychat\nphpmysql\nphpmyvisites\nphpnews\nphpnuke\nphpodp\nphponline\nphpopenchat\nphpopentracker\nphppgadmin\nphpq\nphpqjr\nphprojekt\nphprusearch\nphps\nphpscripts\nphpsearch_files\nphpsecinfo\nphpsecurepages\nphpsessid\nphpshield\nphpshop\nphpsitemap\nphpsitemapng\nphpsso_server\nphpstats\nphpsurveyor\nphpsysinfo\nphptell\nphptest\nphpthumb\nphptmp\nphpweather\nphpwiki\nadmin/index.php\nboard/index.php\ncommunity/index.php?analized=anything\ndoc/admin/index.php\ndotproject/modules/files/index_table.php\nfaqman/index.php\nfilemanager/index.php3\nindex.php?base=test%20\nindex.php?IDAdmin=test\nindex.php?pymembs=admin\nindex.php?SqlQuery=test%20\nindex.php?tampon=test%20\neWebEditPro/ewebeditpro.php\naddcert.php\naddcert.php.en\nagents.php\naiclogin.php\naiclogin.php.en\naiclogin_cert.php\nchpbrdg.php\nchpbrdg.php.en\nchpdata.php\nchpdata.php.en\nchphead.php\nchphead.php.en\nchplinkstrt.php\nchpstrt.php\nchpstrt.php.en\nchpview.php\ncpqlogin.php\ncpqlogin.php.en\ncpqopts.php\ncpqopts.php.en\ncredits.php\ncredits.php.en\ncustcert.php.en\nerrlog.php\nerrlog.php.en\nfull_dns.php\nfull_dns.php.en\ngroups.php\ngroups.php.en\nindex.php\nindex.php.en\nipbind.php\nipbind.php.en\niprstrct.php\niprstrct.php.en\nkerberos.php\nkerberos.php.en\nkrbFailRedirect.php\nlang.php\nlang/en/language.php\nlang/en/log_messages.php\nlang_webapp.php\nlocal.php\nlocal.php.en\nlog_engine.php\nmessage.php\nmessage.php.en\nmessage_strings.php\nno_javascript.php\nnotfound.php\nport2301.php\nshowcert.php\nshowcert.php.en\nsmhhelp.php\nsmhhelp.php.en\nsmhsupport.php\nsmhutil/snmpchp.php.en\ntimeouts.php\ntimeouts.php.en\ntrstcert.php\ntrstcert.php.en\nui_config.php\nuser_prefs.php\n'
    fname=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m3/filename:php.txt\u001b[0m)> \u001b[36;1m').strip()
    if fname == "":
        fname="php.txt"
    a=open(fname,"a")
    a.write(word)
    print(u'\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Successfully Created for php.')
    print("\u001b[36;1mFilename\u001b[0m:",fname)
    a.close()


def html():
    word='_html\nadvhtml_images\nadvhtml_popups\nadvhtml_upload\najaxhtml\najaxresponhtml\ncache_html\ncgi-html\ndhtml\neditorhtml\nemail_html\nestaticas_html\ngenhtml\nhtml\nhtml2\nhtml2pdf\nhtml5\nhtml_editor\nhtml_email\nhtml_emails\nhtml_files\nhtml_old\nhtml_pages\nhtml_snippets\nhtml_templates\nhtmlarea\nhtmledit\nhtmleditor\nhtmlemail\nhtmlfiles\nhtmlimages\nhtmlmail\nhtmlmimemail5\nhtmlpdf\nhtmlrotate\nhtmls\nhtmltag\nib_html\nindex_html\njhtml\nmenu_dhtml\nneathtml\nold-html\nold_html\noldhtml\nphtml\npublic_html\nrhtml\nindex.html\nindex.html\nindex.html.ca\nindex.html.cz.iso8859-2\nindex.html.de\nindex.html.dk\nindex.html.ee\nindex.html.el\nindex.html.en\nindex.html.es\nindex.html.et\nindex.html.fr\nindex.html.he.iso8859-8\nindex.html.hr.iso8859-2\nindex.html.it\nindex.html.ja.iso2022-jp\nindex.html.kr.iso2022-kr\nindex.html.ltz.utf8\nindex.html.lu.utf8\nindex.html.nl\nindex.html.nn\nindex.html.no\nindex.html.po.iso8859-2\nindex.html.pt\nindex.html.pt-br\nindex.html.ru.cp-1251\nindex.html.ru.cp866\nindex.html.ru.iso-ru\nindex.html.ru.koi8-r\nindex.html.ru.utf8\nindex.html.se\nindex.html.tw\nindex.html.tw.Big5\nindex.html.var\ncgi-bin/stats-bin-p/reports/index.html\nLoginPage.html\nXcelerate/Admin/LoginPage.html\nXcelerate/DownloadPage.html\nXcelerate/LoginPage.html\nXcelerate/SampleSites.html\nadminforms.html\ncstest.html\neWebEditPro/index.html\nform.html\nfuturetense_cs/adminforms.html\ninit.html\njsp/index.html\nlogin.html\nmirror.html\nnewtable.html\nretrieve.html\n_vti_bin/shtml.dll\n_vti_inf.html\n_vti_inf.html \nshtml.dll\nshtml.exe\nlegend.html\nno_javascript.html\nred2301.html\nHFM/Common/Empty.html\nHFM/ThirdParty/Bindows/html\nHFM/ThirdParty/Bindows/html/bimain.html\nHFM/ThirdParty/Bindows/html/BiWsdlBuiltinTypes.xsd\nHFM/ThirdParty/Bindows/html/blank.html\nx.shtml\n?wp-html-rend\ndirb_random.shtml\nindex.html\nexamples/jsp/index.html\nexamples/servlets/index.html\nhost-manager/html/*\nhtml/*\nmanager/html\nmanager/html/*\nwebdav/index.html\n*.html\n*.shtml/\nconsole-help/doc/en-us/com/bea/wlserver/core/index.html\ndocs/core/index.html\ndocs/index.html\nexamplesWebApp/examples/src/examples/copyright.html\nfast_track.html\nhelloWebApp/hello.html\npublic_html\nstock/index.html\nstock/publisher.html\nwls_utc/index.html\nWebSphereSamples/SingleSamples/AccountAndTransfer/create.html\nWebSphereSamples/SingleSamples/Increment/increment.html\nWebSphereSamples/YourCo/main.html\napadminred.html\naphtpasswd.html\nestore/annotated-index.html\nestore/index.html\nindex.html\nlogin.html\nmanual/index.html\nwebapp/examples/login.html\n'
    fname=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m4/filename:html.txt\u001b[0m)> \u001b[36;1m').strip()
    if fname == "":
        fname="html.txt"
    a=open(fname,"a")
    a.write(word)
    print(u'\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Successfully Created html name based words.')
    print("\u001b[36;1mFilename\u001b[0m:",fname)
    a.close()


def xml():
    word='_cs_xmlpub\n_xml\naggancixml\ncore-xml\ndataxml\ndropdownxml\nflashxml\nformandxml\nfotoxml\nhotelxml\nraw_xml\nsametime/hostAddress.xml\neWebEditPro/config.xml\nHFM/Calcman/convxmltovbs.asp\nHFM/GlobalNav/HFMStaticObjectList.xml\nHFM/GlobalWorkspaceNav/bpm/conf/HfmConfig.xml\nHFM/GlobalWorkspaceNav/HFMStaticObjectList.xml\nHFM/Java/classes/xerces/xmlParserAPIs.jar\nHFM/Security/bpm/BpmLauncher.xml\nHFM/Security/bpm/BpmUi_Version.xml\nHFM/Security/bpm/conf/BpmContextConfig.xml\nHFM/Security/bpm/conf/BpmDebugConfig.xml\nHFM/Security/bpm/conf/BpmReleaseConfig.xml\nHFM/Security/bpm/conf/HfmConfig.xml\nHFM/Security/conf/HfmConfig.xml\nHFM/Security/modules/com/hyperion/hfm/web/security/assign/DataSet.xml\nhost-manager/host-manager.xml\nmanager/manager.xml\nWEB-INF./web.xml\nWEB-INF/web.xml\nexamplesWebApp/OrderParser.jsp?xmlfile=C:/bea/weblogic81/samples/server/examples/src/examples/xml/orderParser/order.xml\norg.apache.beehive.netui.pageflow.xmlhttprequest.XmlHttpRequestServlet\nweb.xml\nweblogic.xml\nxmlBean\nxml_xmlBean\nStockQuote/services/xmltoday-delayed-quotes\nStockQuote/services/xmltoday-delayed-quotes/wsdl/*\nWEB-INF./web.xml\nWEB-INF/web.xml\nadmin-authz.xml\ncell.xml\nnode.xml\nresources.xml\nsecurity.xml\nserver.xml\nserverindex.xml\nvariables.xml\nvirtualhosts.xml\nweb.xml\n'
    fname=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m5/filename:xml.txt\u001b[0m)> \u001b[36;1m').strip()
    if fname == "":
        fname="xml.txt"
    a=open(fname,"a")
    a.write(word)
    print(u'\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Successfully Created xml name based words.')
    print("\u001b[36;1mFilename\u001b[0m:",fname)
    a.close()


def js():
    word="_js\nadjs\napp_js\nbjs\ncch_js\nchromejs\ncjs\ncss-js\ncss_js\ncssjs\ndjs\nextern_js\nextjs\nfeed2js\nfuploadjs\ngetjs\njgs_galerie_js\njjs\njs\njs-global\njs-lib\njs1\njs2\njsFiles\njs_css\njs_file\njs_files\njs_includes\njs_menu\njs_new\njs_old\njs_peels\njs_scripts\njsapi\njsc\njscal\njscalendar\njscolor\njscommon\njscript\njscripts\njscss\njseditors\njserver\njsession\njsf\njsfiles\njshandler\njsinc\njsky\njslib\njsmenu\njson\njsonwrapper\njsoutput\njsp\njsp-examples\njsp2\njsps\njsr\njss\njsscript\njsscripts\njsso\njstree\njsx\nkaosjs\nlibjs\nloadjs\nmenujs\nmyjs\nnewjs\nnjs\nnojs\npsjs_datalogs\nfingerprint.jsp\nhappyaxis.jsp\ni18nLib.jsp  \nindex.jsp\nsametime/stadmin/LoggingError.jsp\nsametime/stadmin/LoggingMeetingDetails.jsp\nsametime/stadmin/LoggingViewSelection.jsp\nsametime/stadmin/LoggingViewTable.jsp\nsametime/stadmin/MonitoringViewGeneralServerStatus.jsp\nsametime/stadmin/MonitoringViewMeetingsAndParticipants.jsp\nsametime/stadmin/MonitoringViewOverview.jsp\nsametime/stadmin/MonitoringViewSelection.jsp\nsametime/stadmin/MonitoringViewToolsInMeetings.jsp\nsametime/stadmin/MonitoringViewTotalLogins.jsp\nsametime/stadmin/StatisticsViewSelection.jsp\nanalytics/login.jsp\neWebEditPro/ewebeditpro.jsp\njsp\njsp/cs_deployed\njsp/index.html\nchp.js.en\nchpif.js\njs\njs/FormManager.js\njs/LayoutManager.js\njs/buttonManager.js\njs/error_table.js\njs/functions.js\njs/global.js\njs/ui.js\ntreebody.js.en\ndirb_random.jsp\njsp\nweb-console/AOPBinding.jsp\nweb-console/ServerInfo.jsp\nweb-console/SysProperties.jsp\nweb-console/WebModule.jsp\nweb-console/applet.jsp\nweb-console/listMonitors.jsp\nexamples/jsp/index.html\nexamples/jsp/snp/snoop.jsp\nexamples/jsp/source.jsp\nexamples/servlet/default/jsp/snp/snoop.jsp\nexamples/servlet/default/jsp/source.jsp\nexamples/servlet/org.apache.catalina.servlets.DefaultServlet/jsp/snp/snoop.jsp\nexamples/servlet/org.apache.catalina.servlets.DefaultServlet/jsp/source.jsp\nexamples/servlet/org.apache.catalina.servlets.WebdavServlet/jsp/snp/snoop.jsp\nexamples/servlet/org.apache.catalina.servlets.WebdavServlet/jsp/source.jsp\njsp-examples\n*.jsp\n*.jsp/\nLogin.jsp\na2e2gp2r2/x.jsp\nasyncServlet/main.jsp\nbea-guardian-agent/test.jsp\nbea_wls_internal/a2e2gp2r2/x.jsp\nbea_wls_internal/psquare/x.jsp\nconsole/login/LoginForm.jsp\nconsolehelp/index.jsp\nexamplesWebApp/EJBeanManagedClient.jsp\nexamplesWebApp/InteractiveQuery.jsp\nexamplesWebApp/OrderParser.jsp?xmlfile=C:/bea/weblogic81/samples/server/examples/src/examples/xml/orderParser/order.xml\nexamplesWebApp/WebservicesEJB.jsp\nexamplesWebApp/Wsdl2Service.jsp\nexamplesWebApp/index.jsp\next_servlet_annotations/loginForm.jsp\nframework/skeletons/console/js/*\nhelloWebApp/hello.jsp\nindex.jsp\njsp/*\njspSimpleTag\njspSimpleTagEar\njspbuild\nlogin.jsp\nportalAppAdmin/login.jsp\npsquare/x.jsp\nreviewService/createArtist_service.jsp\nreviewService/index.jsp\nstock/index.jsp\nstock/publisher.jsp\nuddiexplorer/Login.jsp\nuddiexplorer/index.jsp\nwls_utc/error.jsp\nwls_utc/index.jsp\nwls_utc/messageLog.jsp\nwls_utc/selectWsdl.jsp\n*.jsp\n*.jsv\n*.jsw\nAddressBookJ2WE/*.jsp\nAddressBookJ2WE/*.jsv\nAddressBookJ2WE/*.jsw\nAddressBookW2JE/*.jsp\nAddressBookW2JE/*.jsv\nAddressBookW2JE/*.jsw\nBank/*.jsp\nBank/*.jsv\nBank/*.jsw\nGreenhouseEJB/*.jsp\nGreenhouseEJB/*.jsv\nGreenhouseEJB/*.jsw\nHelloHTML.jsp\nHelloHTMLError.jsp\nHelloVXML.jsp\nHelloVXMLError.jsp\nHelloWML.jsp\nHelloWMLError.jsp\nHitCount.jsp\nOrderProcessorEJB/*.jsp\nOrderProcessorEJB/*.jsv\nOrderProcessorEJB/*.jsw\nStockQuote/*.jsp\nStockQuote/*.jsv\nStockQuote/*.jsw\nTechnologySamples/AddressBook/*.jsp\nTechnologySamples/AddressBook/*.jsv\nTechnologySamples/AddressBook/*.jsw\nWSsamples/index.jsp\nWarehouseEJB/*.jsp\nWarehouseEJB/*.jsv\nWarehouseEJB/*.jsw\nadmin/logon.jsp\nadmin/secure/logon.jsp\nauth_error.jsp\ncachemonitor/statistics.jsp\ncom.ibm.ws.console.events/runtime_messages.jsp\ndebug_error.jsp\nerror.jsp\nindex.jsp\nivt/ivtAddition.jsp\nivt/ivtDate.jsp\njsp\nopc/*.jsp\nopc/*.jsv\nopc/*.jsw\nruntime_messages.jsp\nsimple.jsp\nstatistics.jsp\nvery_simple.jsp\nwebapp/examples/simple.jsp\n"
    
    fname=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m6/filename:js.txt\u001b[0m)> \u001b[36;1m').strip()
    if fname == "":
        fname="js.txt"
    a=open(fname,"a")
    a.write(word)
    print(u'\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] Successfully Created js,jsp,jsw name based words.')
    print("\u001b[36;1mFilename\u001b[0m:",fname)
    a.close()

def customize():
    R="\u001b[31;1m"
    G="\u001b[32;1m"
    Y="\u001b[33;1m"
    N="\u001b[0m"
    S="\u001b[36;1m"
    List={}
    count=1
    prefix=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m7/Prefix\u001b[0m)> \u001b[0m').strip()
    suffix=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m7/Suffix\u001b[0m)> \u001b[0m').strip()
    while True:
        FileI=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m7/Inputfile\u001b[0m)> \u001b[0m').strip()
        if FileI == "":
            break
        try:
            fi=open(FileI,"r")
            break
        except:
            print("{Ga}[{Rr}!{Ga}] {Rr}{}{Ga}: No such a file.{Nr}".format(FileI,Rr=R,Ga=G,Nr=N))

    if FileI != "":
        info=input("{}Do you want to add some more info ? {}: ".format(Y,N)).strip()
    else:
        info='yes'
    if info in ('y','Y','yes','Yes','YES'):
        print(u"\u001b[32;1m   ---  Additional Word  --- \u001b[0m")
        print(u"\u001b[32;1m[\u001b[31;1m*\u001b[32;1m] After added, '\u001b[33;1m:q\u001b[32;1m' to come back\n")
        while True:
            word=input("{Rr}{:>2}{Nr}.{Rr} Additional Word{Nr}: ".format(str(count),Rr=R,Nr=N)).strip()
            if word != ":q":
                List[count]=word
                count+=1
            else:
                print("   \t{}----{}".format(G,N))
                break
    op=input(u'\u001b[32;4;1mThirukka\u001b[0m(\u001b[31;1m7/Outputfilename:wordlist.txt\u001b[0m)> \u001b[36;1m').strip()
    if op == "":
        op="wordlist.txt"
    fo=open(op,"a")
    if FileI != "":
        for i in fi.readlines():
            try:
                i=i.replace("\n","")
            except:
                pass
            if i != "":
                fo.write(prefix+i+suffix+"\n")
        fi.close()
    for i in List:
        if List[i] not in ("","\n"):
            fo.write(prefix+str(List[i])+suffix+"\n")
    fo.close()
    print("{}[{}*{}] Process done".format(G,R,G))
    print("{}Filename{}: {}".format(R,N,op))



opt()
